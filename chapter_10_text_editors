***** COMANDOS APT NO ESTABA EN EL CURSO ****************
**INSTALLATION  COMMANDS
    -This command installs a new package.
    apt-get install <package_name> 

   -This command searches the repositories and installs the build dependencies for <package_name>. If the package is not in the repositories it will return an error.
    apt-get build-dep <package_name> 

    -Aptitude is an Ncurses viewer of packages installed or available. Aptitude can be used from the command line in a similar way to apt-get. Enter man aptitude for more information.
    APT and aptitude will accept multiple package names as a space delimited list. For example:
    aptitude install <package_name>
    apt-get install <package1_name> <package2_name> <package3_name>
 
 **MAINTENANCE COMMANDS
    
    -Run this command after changing /etc/apt/sources.list or /etc/apt/preferences . For information regarding /etc/apt/preferences,
    see PinningHowto. Run this command periodically to make sure your source list is up-to-date. This is the equivalent of "Reload"
    in Synaptic or "Fetch updates" in Adept.
    apt-get update
    
    -This command upgrades all installed packages. This is the equivalent of "Mark all upgrades" in Synaptic.
    apt-get upgrade
    
    -The same as the above, except add the "smart upgrade" checkbox. It tells APT to use "smart" conflict resolution system, and it will attempt
    to upgrade the most important packages at the expense of less important ones if necessary. 
    apt-get dist-upgrade
    
    -This command is a diagnostic tool. It does an update of the package lists and checks for broken dependencies.
    apt-get check
    
    -This command does the same thing as Edit->Fix Broken Packages in Synaptic. Do this if you get complaints about packages with "unmet dependencies".
    apt-get -f install
    
    -This command removes .deb files for packages that are no longer installed on your system. Depending on your installation habits, removing these files from /var/cache/apt/archives may regain a significant amount of diskspace.
    apt-get autoclean
    
    -The same as above, except it removes all packages from the package cache. This may not be desirable if you have a slow Internet connection, since it will cause you to redownload any packages you need to install a program.
    apt-get clean
            el directorio de package es /var/cache/apt/archives y para chekear su tamanio 
            du -sh /var/cache/apt/archives
            
 **RECONFIGURACION DE PAQUETES
    -Reconfigure the named package. With many packages, youâ€™ll be prompted with some configuration questions you may not have known were there.
     dpkg-reconfigure <package_name>
     dpkg-reconfigure fontconfig-config
     
 **BORRADO PAQUETES 
    -his command removes an installed package, leaving configuration files intact.
       apt-get remove <package_name>
       
    -This command completely removes a package and the associated configuration files. Configuration files residing in ~ are not usually affected by this command.
        apt-get purge <package_name>
        
    -BOrrar en instalalr en una sola linea :v  borra package1 e instala package2
        apt-get remove <package1> <package2>+
    
    -This command removes packages that were installed by other packages and are no longer needed.
        apt-get autoremove <package_name>
    
    -eliminar todos los archivos de configuracion de los paquetes removidos 
        dpkg -l | grep '^rc' | awk '{print $2}' | xargs dpkg --purge
    
    
 **BUSQUEDA DE PAQUETES
    -Each package has a name and a description. This command lists packages whose name or description contains <search_term>.   
        apt-cache search <search_term>
        
    -This will find packages whose names contain <search_term>. Similar to apt-cache search, but also shows whether a package is installed on your system by marking it with ii (installed) and un (not installed).
        dpkg -l *<search_term>*
    
    
    
    
    
    
    
    
    
    
    
